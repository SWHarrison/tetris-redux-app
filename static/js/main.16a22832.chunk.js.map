{"version":3,"sources":["svg/chevron-left-solid.svg","svg/chevron-right-solid.svg","svg/sync-alt-solid.svg","svg/chevron-down-solid.svg","actions/index.js","utils/index.js","reducers/game-reducer.js","reducers/index.js","components/grid-square.js","components/grid-board.js","components/next-block.js","components/side-bar.js","components/controls.js","components/message-popup.js","components/ScoreView.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","moveRight","type","moveLeft","rotate","moveDown","pause","resume","restart","gridDefault","array","row","push","col","randomShape","min","max","shapes","length","Math","floor","random","defaultState","grid","shape","rotation","x","y","nextShape","isRunning","score","linesCleared","level","speed","gameOver","nextRotation","canMoveTo","currentShape","proposedX","proposedY","possibleRow","undefined","addBlockToGrid","blockOffGrid","block","newGrid","console","log","checkRows","completedRows","indexOf","splice","unshift","Array","fill","rowsCleared","gameReducer","state","action","newRotation","maybeY","obj","newState","checkRowsResult","reducers","combineReducers","game","GridSquare","classes","this","props","color","className","Component","GridBoard","lastUpdateTime","progressTime","window","requestAnimationFrame","update","bind","time","deltaTime","blockColor","map","rowArray","square","blockX","blockY","k","key","makeGrid","connect","NextBlock","onClick","e","Controls","controlButton","icon","src","url","alt","leftArrow","rightArrow","rotateIcon","downArrow","MessagePopup","message","isHidden","Footer","class","href","store","createStore","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,KAGT,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,KAGT,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,KAGT,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,GACP,CAAC,EAAE,EAAE,EAAE,IAER,CAAC,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","file":"static/js/main.16a22832.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chevron-left-solid.dc880f17.svg\";","module.exports = __webpack_public_path__ + \"static/media/chevron-right-solid.1fce7054.svg\";","module.exports = __webpack_public_path__ + \"static/media/sync-alt-solid.b1b03f76.svg\";","module.exports = __webpack_public_path__ + \"static/media/chevron-down-solid.2c0862a6.svg\";","export const PAUSE      = \"PAUSE\"       // Pause the game\nexport const RESUME     = \"RESUME\"      // Resume a paused game\nexport const MOVE_LEFT  = \"MOVE_LEFT\"   // Move piece left\nexport const MOVE_RIGHT = \"MOVE_RIGHT\"  // Move piece right\nexport const ROTATE     = \"ROTATE\"      // Rotate piece\nexport const MOVE_DOWN  = \"MOVE_DOWN\"   // Move piece down\nexport const SET_NEXT   = \"SET_NEXT\"    // ???\nexport const GAME_OVER  = \"GAME_OVER\"   // The game is over\nexport const RESTART    = \"RESTART\"     // Restart Game\n\n\nexport const setNext = () => {\n  return { type: SET_NEXT }\n}\n\nexport const moveRight = () => {\n  return { type: MOVE_RIGHT }\n}\n\nexport const moveLeft = () => {\n  return { type: MOVE_LEFT }\n}\n\nexport const rotate = () => {\n  return { type: ROTATE }\n}\n\nexport const moveDown = () => {\n  return { type: MOVE_DOWN }\n}\n\nexport const pause = () => {\n  return { type: PAUSE }\n}\n\nexport const resume = () => {\n  return { type: RESUME }\n}\n\nexport const restart = () => {\n  return { type: RESTART }\n}\n","\n// Generates Random numbers in a range\nexport const random = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min\n}\n\n// Returns the default grid\nexport const gridDefault = () => {\n  const rows = 18\n  const cols = 10\n  const array = []\n  for (let row = 0; row < rows; row++) {\n    array.push([])\n    for (let col = 0; col < cols; col++) {\n      array[row].push(0)\n    }\n  }\n  return array\n}\n\n// Return a random shape\nexport const randomShape = () => {\n  return random(1, shapes.length - 1)\n}\n\n// Return the default state for the game\nexport const defaultState = () => {\n  return {\n    grid: gridDefault(),\n    shape: randomShape(),\n    rotation: 0,\n    x: 5,\n    y: -4,\n    nextShape: randomShape(),\n    isRunning: true,\n    score: 0,\n    linesCleared: 0,\n    level: 1, \n    speed: 1000,\n    gameOver: false\n  }\n}\n\n// Returns the next rotation for a shape\nexport const nextRotation = (shape, rotation) => {\n  return (rotation + 1) % shapes[shape].length\n}\n\nexport const canMoveTo = (shape, grid, x, y, rotation) => {\n  const currentShape = shapes[shape][rotation]\n  // Loop through all rows and cols of the **shape**\n  for (let row = 0; row < currentShape.length; row++) {         // Loop through rows\n    for (let col = 0; col < currentShape[row].length; col++) {  // Loop through cols\n      if (currentShape[row][col] !== 0) {                       // Look for a 1 here\n        const proposedX = col + x                               // x offset on grid\n        const proposedY = row + y                               // y offset on grid\n        if (proposedY < 0) {\n          continue\n        }\n        const possibleRow = grid[proposedY]                     // Get the row on the grid\n        if (possibleRow) {                                      // Check row exists\n          // Check this column in the row undefined and it's off the edges, 0 and it's empty\n          if (possibleRow[proposedX] === undefined || possibleRow[proposedX] !== 0) {                         // check the contents\n            return false // undefined or not 0 and it's occupied we can't move here.\n          }\n        } else {\n          return false\n        }\n      }\n    }\n  }\n  return true\n}\n\n// Adds current shape to grid\nexport const addBlockToGrid = (shape, grid, x, y, rotation) => {\n  let blockOffGrid = false\n  const block = shapes[shape][rotation]\n  const newGrid = [ ...grid ]\n  for (let row = 0; row < block.length; row++) {\n    for (let col = 0; col < block[row].length; col++) {\n      if (block[row][col]) {\n        // TODO: Find game over when block can't b placed.\n        const yIndex = row + y\n        // const xIndex = col + x\n\n        if (yIndex < 0) {\n          blockOffGrid = true\n        } else {\n          newGrid[row + y][col + x] = shape\n        }\n      }\n    }\n  }\n  console.log(`addBlockToGrid: ${blockOffGrid}`)\n  return { grid: newGrid, gameOver: blockOffGrid }\n}\n\n// Checks for completed rows and scores points\nexport const checkRows = (grid) => {\n  const points = [0, 40, 100, 300, 1200]\n  let completedRows = 0\n  for (let row = 0; row < grid.length; row++) {\n    if (grid[row].indexOf(0) === -1) {\n      completedRows += 1\n      grid.splice(row, 1)\n      grid.unshift(Array(10).fill(0))\n    }\n  }\n  return { score: points[completedRows], rowsCleared: completedRows}\n}\n\n// Define block shapes and their rotations as arrays.\nexport const shapes = [\n  // none\n  [[[0,0,0,0],\n    [0,0,0,0],\n    [0,0,0,0],\n    [0,0,0,0]]],\n  // I\n  [[[0,0,0,0],\n    [1,1,1,1],\n    [0,0,0,0],\n    [0,0,0,0]],\n\n   [[0,1,0,0],\n    [0,1,0,0],\n    [0,1,0,0],\n    [0,1,0,0]]],\n\n  // T\n  [[[0,0,0,0],\n    [1,1,1,0],\n    [0,1,0,0],\n    [0,0,0,0]],\n\n   [[0,1,0,0],\n    [1,1,0,0],\n    [0,1,0,0],\n    [0,0,0,0]],\n\n   [[0,1,0,0],\n    [1,1,1,0],\n    [0,0,0,0],\n    [0,0,0,0]],\n\n   [[0,1,0,0],\n    [0,1,1,0],\n    [0,1,0,0],\n    [0,0,0,0]]],\n\n  // L\n  [[[0,0,0,0],\n    [1,1,1,0],\n    [1,0,0,0],\n    [0,0,0,0]],\n\n   [[1,1,0,0],\n    [0,1,0,0],\n    [0,1,0,0],\n    [0,0,0,0]],\n\n   [[0,0,1,0],\n    [1,1,1,0],\n    [0,0,0,0],\n    [0,0,0,0]],\n\n   [[0,1,0,0],\n    [0,1,0,0],\n    [0,1,1,0],\n    [0,0,0,0]]],\n\n  // J\n  [[[1,0,0,0],\n    [1,1,1,0],\n    [0,0,0,0],\n    [0,0,0,0]],\n\n   [[0,1,1,0],\n    [0,1,0,0],\n    [0,1,0,0],\n    [0,0,0,0]],\n\n   [[0,0,0,0],\n    [1,1,1,0],\n    [0,0,1,0],\n    [0,0,0,0]],\n\n   [[0,1,0,0],\n    [0,1,0,0],\n    [1,1,0,0],\n    [0,0,0,0]]],\n\n  // Z\n  [[[0,0,0,0],\n    [1,1,0,0],\n    [0,1,1,0],\n    [0,0,0,0]],\n\n   [[0,0,1,0],\n    [0,1,1,0],\n    [0,1,0,0],\n    [0,0,0,0]]],\n\n  // S\n  [[[0,0,0,0],\n    [0,1,1,0],\n    [1,1,0,0],\n    [0,0,0,0]],\n\n   [[0,1,0,0],\n    [0,1,1,0],\n    [0,0,1,0],\n    [0,0,0,0]]],\n\n  // O\n  [[[0,1,1,0],\n    [0,1,1,0],\n    [0,0,0,0],\n    [0,0,0,0]]]\n]\n","import {\n  MOVE_RIGHT, MOVE_LEFT, MOVE_DOWN, ROTATE,\n  PAUSE, RESUME, RESTART, GAME_OVER\n} from '../actions'\n\nimport {\n  defaultState,\n  nextRotation,\n  canMoveTo,\n  addBlockToGrid,\n  randomShape,\n  checkRows } from '../utils'\n\nconst gameReducer = (state = defaultState(), action) => {\n  const { shape, grid, x, y, rotation, nextShape, score, linesCleared, isRunning } = state\n\n  switch(action.type) {\n    case ROTATE:\n      const newRotation = nextRotation(shape, rotation)\n      if (canMoveTo(shape, grid, x, y, newRotation)) {\n          return { ...state, rotation: newRotation }\n      }\n      return state\n\n    case MOVE_RIGHT:\n      if (canMoveTo(shape, grid, x + 1, y, rotation)) {\n        return { ...state, x: x + 1 }\n      }\n      return state\n\n    case MOVE_LEFT:\n      if (canMoveTo(shape, grid, x - 1, y, rotation)) {\n          return { ...state, x: x - 1 }\n      }\n      return state\n\n    case MOVE_DOWN:\n      // Get the next potential Y position\n      const maybeY = y + 1\n\n      // Check if the current block can move here\n      if (canMoveTo(shape, grid, x, maybeY, rotation)) {\n          // If so move\n          return { ...state, y: maybeY }\n      }\n\n      // If not place the block\n      // (this returns an object with a grid and gameover bool)\n      const obj = addBlockToGrid(shape, grid, x, y, rotation)\n      const newGrid = obj.grid\n      const gameOver = obj.gameOver\n\n      if (gameOver) {\n        // Game Over\n        const newState = { ...state }\n        newState.shape = 0\n        newState.grid = newGrid\n        return { ...state, gameOver: true }\n      }\n\n      // reset somethings to start a new shape/block\n      const newState = defaultState()\n      newState.grid = newGrid\n      newState.shape = nextShape\n      newState.nextShape = randomShape()\n      newState.score = score\n      newState.isRunning = isRunning\n\n      // TODO: Check and Set level\n      // Score increases decrease interval\n      // It's important that only a copy of the be passed into checkRows!\n      const checkRowsResult = checkRows(newGrid)\n      newState.score = score + checkRowsResult.score\n      newState.linesCleared = linesCleared + checkRowsResult.rowsCleared\n\n      return newState\n\n    case RESUME:\n\n      return { ...state, isRunning: true }\n\n    case PAUSE:\n\n      return { ...state, isRunning: false }\n\n    case GAME_OVER:\n\n      return state\n\n    case RESTART:\n\n      return defaultState()\n\n    default:\n      return state\n  }\n}\n\nexport default gameReducer\n","import { combineReducers } from 'redux'\nimport gameReducer from './game-reducer'\n\nconst reducers = combineReducers({\n  game: gameReducer\n})\n\nexport default reducers\n","import React, { Component } from 'react'\n\n// Represents a grid square with a color\n\nclass GridSquare extends Component {\n\n  render () {\n    const classes = `grid-square color-${this.props.color}`\n    return <div className={classes} />\n  }\n}\n\nexport default GridSquare\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport GridSquare from './grid-square'\n\nimport { moveDown } from '../actions'\nimport { shapes } from '../utils'\n\n// Represents a 10 x 18 grid of grid squares\n\nclass GridBoard extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.lastUpdateTime = 0\n    this.progressTime = 0\n  }\n\n  componentDidMount() {\n    window.requestAnimationFrame(this.update.bind(this))\n  }\n\n  // Handle game updates\n  update(time) {\n    window.requestAnimationFrame(this.update.bind(this))\n    if (!this.props.isRunning) {\n      return\n    }\n\n    if (!this.lastUpdateTime) {\n      this.lastUpdateTime = time\n    }\n\n    const deltaTime = time - this.lastUpdateTime\n    this.progressTime += deltaTime\n    if (this.progressTime > this.props.speed) {\n      this.props.moveDown()\n      this.progressTime = 0\n    }\n\n    this.lastUpdateTime = time\n  }\n\n  makeGrid() {\n    const { grid, shape, rotation, x, y } = this.props\n    const block = shapes[shape][rotation]\n    const blockColor = shape\n    // map rows\n    return grid.map((rowArray, row) => {\n      // map columns\n      return rowArray.map((square, col) => {\n        const blockX = col - x\n        const blockY = row - y\n        let color = square\n        // Map current falling block to grid\n        if (blockX >= 0 && blockX < block.length && blockY >= 0 && blockY < block.length) {\n          color = block[blockY][blockX] === 0 ? color : blockColor\n        }\n        // Generate a unique key for every block\n        const k = row * grid[0].length + col;\n        // Generate a grid square\n        return <GridSquare\n                key={k}\n                square={square}\n                color={color}>\n                {square}\n              </GridSquare>\n      })\n    })\n  }\n\n  render () {\n    return (\n      <div className='grid-board'>\n        {this.makeGrid()}\n      </div>\n    )\n  }\n}\n\n// Map state to props\nconst mapStateToProps = (state) => {\n  return {\n    grid: state.game.grid,\n    shape: state.game.shape,\n    rotation: state.game.rotation,\n    x: state.game.x,\n    y: state.game.y,\n    speed: state.game.speed,\n    isRunning: state.game.isRunning\n  }\n}\n\n// Map Dipatch to Props\nconst mapDispatchToProps = () => {\n  return {\n    moveDown\n  }\n}\n\n// Connect the component\nexport default connect(mapStateToProps, mapDispatchToProps())(GridBoard)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport GridSquare from './grid-square'\n\nimport { shapes } from '../utils'\n\n// Draws the \"next\" block view showing the next block to drop\n\nclass NextBlock extends Component {\n\n  makeGrid() {\n    const { shape } = this.props    // deconstruct shape\n    const block = shapes[shape][0]  // get the array for this shape first rotation\n    const box = shapes[0][0]        // get the empty shape\n\n    // Map the block to the grid\n    return box.map((rowArray, row) => {\n      return rowArray.map((square, col) => {\n        const color = block[row][col] === 0 ? 0 : shape // If there is a 1 use the shape index\n        return <GridSquare key={`${row}${col}`} color={color} />\n      })\n    })\n  }\n\n  render () {\n\n    return (\n      <div className=\"next-block\">\n        {this.makeGrid()}\n      </div>\n    )\n  }\n}\n\n// Map State to props\nconst mapStateToProps = (state) => {\n  return {\n    // Return nextShape as shape\n    shape: state.game.nextShape\n  }\n}\n\n// Conect this component\nexport default connect(mapStateToProps)(NextBlock)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { pause, resume, restart } from '../actions'\n\nfunction SideBar(props) {\n  const { isRunning, level, resume, pause, restart, gameOver } = props\n\n  return (\n    <div className=\"score-board\">\n      <div className=\"not-selectable\">Level: {level}</div>\n\n      <button className=\"score-board-button not-selectable\" onClick={(e) => {\n        if (gameOver) { return }\n        isRunning ? pause() : resume()\n      }}>{isRunning ? \"Pause\" : \"Resume\"}</button>\n\n\n      <button className=\"score-board-button not-selectable\" onClick={(e) => {\n        restart()\n      }}>Restart</button>\n\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    score: state.game.score,\n    isRunning: state.game.isRunning,\n    gameOver: state.game.gameOver,\n    level: state.game.level\n  }\n}\n\nconst mapDispatchToProps = () => {\n  return {\n    pause,\n    resume,\n    restart\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps())(SideBar)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { moveDown, moveLeft, moveRight, rotate } from '../actions'\n\nimport leftArrow from '../svg/chevron-left-solid.svg'\nimport rightArrow from '../svg/chevron-right-solid.svg'\nimport rotateIcon from '../svg/sync-alt-solid.svg'\nimport downArrow from '../svg/chevron-down-solid.svg'\n\nclass Controls extends Component {\n\n  render() {\n    const { isRunning, gameOver } = this.props;\n    const controlButton = (onClick, icon) => {\n       return (\n           <button className=\"control-button not-selectable\" onClick={(e) => {\n               onClick(e);\n           }}><img src={icon.url} alt={icon.alt}/></button>\n       )\n    };\n\n    const moveLeft = () => {\n        console.log(isRunning, gameOver)\n        if (!isRunning || gameOver) { return }\n        this.props.moveLeft()\n    };\n\n    const moveRight = () => {\n        if (!isRunning || gameOver) { return }\n        this.props.moveRight()\n    };\n\n    const rotate = () => {\n        if (!isRunning || gameOver) { return }\n        this.props.rotate()\n    };\n\n    const moveDown = () => {\n        if (!isRunning || gameOver) { return }\n        this.props.moveDown()\n    };\n\n    return (\n      <div className=\"controls\">\n        {/* left */}\n        {controlButton(moveLeft, {url: leftArrow, alt: \"Left Arrow Symbol\"} )}\n\n        {/* right */}\n        {controlButton(moveRight, {url: rightArrow, alt: \"Right Arrow Symbol\"} )}\n\n        {/* rotate */}\n        {controlButton(rotate, {url: rotateIcon, alt: \"Rotate Arrow Symbol\"} )}\n\n        {/* down */}\n        <button className=\"control-button\" onClick={(e) => {\n          if (!isRunning || gameOver) { return }\n          this.props.moveDown() // \n        }}><img src={downArrow} /></button>\n\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isRunning: state.game.isRunning,\n    gameOver: state.game.gameOver\n  }\n}\n\nconst mapDispatchToProps = () => {\n  return {\n    moveRight,\n    moveLeft,\n    moveDown,\n    rotate\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps())(Controls)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { restart } from '../actions'\n\n// Displays a message\n\nclass MessagePopup extends Component {\n\n  render() {\n    const { gameOver, isRunning } = this.props\n    let message = ''\n    let isHidden = 'hidden'\n\n    console.log('Message Popup')\n    console.log(gameOver, isRunning)\n\n    if (gameOver) {\n      message = 'Game Over'\n      isHidden = ''\n    } else if (!isRunning) {\n      message = 'Paused'\n      isHidden = ''\n    } else {\n      message = '???'\n    }\n\n    return (\n      <div className={`message-popup ${isHidden} not-selectable`}>\n        <h1>{message}</h1>\n        <p></p>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    gameOver: state.game.gameOver,\n    isRunning: state.game.isRunning\n  }\n}\n\nconst mapDispatchToProps = () => {\n  return {\n    restart\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps())(MessagePopup)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nfunction ScoreView(props) {\n  return (\n    <div className=\"score-view not-selectable\">\n      <p className=\"score\">Score: <span>{props.score}</span></p>\n      <p className=\"lines-complete\">Lines: Cleared: {props.linesCleared}</p>\n    </div>\n  ) \n}\n\nconst mapStateToProps = (state) => {\n  return {\n    score: state.game.score,\n    linesCleared: state.game.linesCleared,\n    isRunning: state.game.isRunning,\n    gameOver: state.game.gameOver\n  }\n}\n\nconst mapDispatchToProps = () => {\n  return {\n   \n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps())(ScoreView)","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport '../index.css';\n\nclass Footer extends Component {\n    // constructor(props) {\n    //     super(props)\n    //     this.state = { name: \"\" }\n    // }\n\n    render() {\n        return (\n            <footer class=\"page-footer\">\n                <div class=\"footer-container\">\n                    <div>\n                        <h1>Links</h1>\n                        <p class=\"grey-text text-lighten-4\">Like this game? Find out more about the history</p>\n                        <ul>\n                        <li><a href=\"https://en.wikipedia.org/wiki/Tetris\">The history of Tetris</a></li>\n                        <li><a href=\"https://www.youtube.com/watch?v=_fQtxKmgJC8\">Tetris Documentary</a></li>\n                        <li><a href=\"https://mentalfloss.com/article/85866/5-fun-facts-about-tetris\">Tetris Trivia</a></li>\n                        <li><a href=\"https://www.youtube.com/watch?v=ViwDUiCzPVU\">Tetris: The Grandmaster Showcase AGDQ</a></li>\n                        </ul>\n                    </div>\n                    <div class=\"row\">\n                        <p class=\"grey-text text-lighten-4\">Or help contribute to the project</p>\n                        <ul>\n                        <li><a href=\"https://reactjs.org/\">Created with React</a></li>\n                        <li><a href=\"https://react-redux.js.org/\">and Redux</a></li>\n                        <li><a href=\"https://github.com/MakeSchool-Tutorials/web-7-react-redux-tetris-app\">Tutorial to make this game</a></li>\n                        <li><a href=\"https://github.com/soggybag/tetris-redux-app/issues\">Want to contribute to this project?</a></li>\n                        <li><a href=\"https://github.com/soggybag/tetris-redux-app\">Link to this repo</a></li>\n                        </ul>\n                    </div>\n                </div>\n            </footer>\n        )\n    }\n}\nexport default Footer;","import React, { Component } from 'react';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\n\nimport reducers from './reducers'\n\nimport GridBoard from './components/grid-board'\nimport NextBlock from './components/next-block'\nimport ScoreBoard from './components/side-bar'\nimport Controls from './components/controls'\nimport MessagePopup from './components/message-popup'\nimport ScoreView from './components/ScoreView'\nimport Footer from './components/Footer'\n\nconst store = createStore(reducers)\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"container\">\n          <header className=\"header\">\n            <h1 className=\"App-title\">Tetris Redux</h1>\n          </header>\n          <div className=\"App\">\n            <ScoreView />\n            <GridBoard />\n            <NextBlock />\n            <ScoreBoard />\n            <Controls />\n            <MessagePopup />\n          </div>\n          <Footer />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n\n// Testing with\n// https://blog.bitsrc.io/testing-your-react-app-with-puppeteer-and-jest-c72b3dfcde59\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}